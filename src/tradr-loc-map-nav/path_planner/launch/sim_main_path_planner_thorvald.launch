<?xml version="1.0" encoding="utf-8"?>

<launch>

	<arg name="robot_name" default="thorvald"/>
	<arg name="simulator" value="gazebo"/>

	<arg name="respawn_value" default="false"/>
	<!-- boolean: true, false -->

	<arg name="use_queue_path_planner" default="false"/>
	<!-- select which planner do you want; the domain is boolean: true -> queue_path_planner false -> path_planner -->

	<arg name="enable_multi" default="false"/>
	<!-- enable/disable multi-robot coordination -->
	<arg name="number_of_robots" default="1"/>

	<!-- launch mapping -->
	<include file="$(find path_planner)/launch/sim_mapping_$(arg robot_name).launch">
		<arg name="respawn_value" value="$(arg respawn_value)"/>
		<arg name="robot_name" value="$(arg robot_name)"/>
		<arg name="simulator" value="$(arg simulator)"/>
	</include>

	<!-- launch traversability -->
	<include file="$(find path_planner)/launch/sim_traversability_$(arg robot_name).launch">
		<arg name="respawn_value" value="$(arg respawn_value)"/>
		<arg name="robot_name" value="$(arg robot_name)"/>
		<arg name="simulator" value="$(arg simulator)"/>
		<arg name="enable_multi_robot_avoidance" value="$(arg enable_multi)"/>
		<arg name="number_of_robots" value="$(arg number_of_robots)"/>
	</include>

	<!-- BLOCK FOR SELECTING THE PATH PLANNER TYPE -->
	<group unless="$(arg use_queue_path_planner)">
		<include file="$(find path_planner)/launch/sim_path_planner_manager_$(arg robot_name).launch">
			<arg name="respawn_value" value="$(arg respawn_value)"/>
			<arg name="use_marker_controller" value="true"/>
		</include>
	</group>
	<group if="$(arg use_queue_path_planner)">
		<include file="$(find path_planner)/launch/sim_queue_path_planner_$(arg robot_name).launch">
			<arg name="respawn_value" value="$(arg respawn_value)"/>
		</include>
		<include file="$(find path_planner)/launch/sim_path_planner_manager_$(arg robot_name).launch">
			<arg name="respawn_value" value="$(arg respawn_value)"/>
			<arg name="use_marker_controller" value="false"/>
		</include>
	</group>

	<!-- launch the trajectory control -->
	<include file="$(find trajectory_control)/launch/sim_trajectory_control_$(arg robot_name).launch">
		<arg name="respawn_value" value="$(arg respawn_value)"/>
		<arg name="robot_name" value="$(arg robot_name)"/>
	</include>

	<!-- launch rviz -->
	<!-- <include file="$(find path_planner)/launch/rviz_sim_path_planning_thorvald.launch"/> -->

	<node pkg="topic_tools" type="mux" name="mux_cmd_vel"
		args="cmd_vel_desired_speed /nav/cmd_vel /teleop_ocu/cmd_vel /teleop_joy/cmd_vel /local_joy/cmd_vel" >
		<remap from="mux/select" to="private/mux_cmd_vel/select" />
		<remap from="mux/add" to="private/mux_cmd_vel/add" />
		<remap from="mux/delete" to="private/mux_cmd_vel/delete" />
		<remap from="mux/list" to="private/mux_cmd_vel/list" />
		<remap from="cmd_vel_select" to="private/mux_cmd_vel/deprecated" />
		<remap from="mux/selected" to="mux_cmd_vel/selected" />
		<remap from="/nav/cmd_vel" to="nav/cmd_vel" />
	</node>


	<node pkg="nifti_teleop" type="nifti_mux_ctrl.py" name="nifti_mux_control"/>

</launch>
