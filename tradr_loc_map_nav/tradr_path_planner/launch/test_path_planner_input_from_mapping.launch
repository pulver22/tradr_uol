<launch>
	
	<arg name="use_queue_tradr_path_planner" value="false" /> <!-- select which planner do you want; 
														     the domain is boolean: true  -> queue_tradr_path_planner
																					false -> tradr_path_planner
														      
														     -->

        <!-- 
            NOTE: this launcher uses the "/point_map" topic coming from the mapper as a pointcloud input to the normals estimation 
        -->

	<!--node name="mapping" pkg="octomap_server" type="octomap_server_node" respawn="false" output="screen">
	 <param name = "base_frame_id" value = "/base_link"/>
	 <param name = "resolution" value = "0.075"/>
	 <param name = "sensor_model/hit" value = "0.75"/>
	 <param name = "sensor_model/miss" value = "0.45" />
	 <param name = "sensor_model/min" value = "0.12" />
	 <param name = "sensor_model/max" value = "0.98" />

	 <remap from = "cloud_in" to = "/dynamic_point_cloud"/>
	 <remap from = "octomap_point_cloud_centers" to = "/dynjoinpcl_nn"/>
	</node--> 
	
	<node name="compute_normals" pkg="tradr_path_planner" type="compute_normals" respawn="false" output="screen">
		<rosparam file="$(find tradr_path_planner)/launch/tradr_path_planner_octomap.yaml" /> 
	 <!--remap from = "cloud_in" to = "/dynjoinpcl_nn"/-->
	 <remap from = "cloud_in" to = "/point_map"/> <!-- here the  /point_map enters -->
	 <remap from = "cloud_out" to = "/dynjoinpcl"/>  
	</node> 

	<node name="traversability" pkg="tradr_path_planner" type="traversability" respawn="false" output="screen">
		<rosparam file="$(find tradr_path_planner)/launch/tradr_path_planner_octomap.yaml" /> 
	</node> 
	
    <!-- BLOCK FOR SELECTING THE PATH PLANNER TYPE -->
	<group unless="$(arg use_queue_tradr_path_planner)">
		<node name="tradr_path_planner" pkg="tradr_path_planner" type="tradr_path_planner" respawn="false" output="screen">
		</node> 
	</group>
    <group if="$(arg use_queue_tradr_path_planner)">
		<node name="tradr_path_planner" pkg="tradr_path_planner" type="queue_tradr_path_planner" respawn="false" output="screen">
		</node> 
	</group>
	
</launch>
